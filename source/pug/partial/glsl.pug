.
  <script id="vertexShader" type="x-shader/x-vertex">
    varying vec2 vUv;
  
    void main() {
      vUv = uv;
      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);
      gl_Position = projectionMatrix * mvPosition;
    }
  </script>
  <script id="fragmentShader" type="x-shader/x-fragment">
    uniform float time;
    uniform vec2 resolution;

    uniform sampler2D texture;

    varying vec2 vUv;

    float random (in vec2 st) {
        return fract(sin(dot(st.xy,
                             vec2(12.9898,78.233)))*
            43758.5453123);
    }

    // Based on Morgan McGuire @morgan3d
    // https://www.shadertoy.com/view/4dS3Wd
    float noise (in vec2 st) {
        vec2 i = floor(st);
        vec2 f = fract(st);

        // Four corners in 2D of a tile
        float a = random(i);
        float b = random(i + vec2(1.0, 0.0));
        float c = random(i + vec2(0.0, 1.0));
        float d = random(i + vec2(1.0, 1.0));

        vec2 u = f * f * (3.0 - 2.0 * f);

        return mix(a, b, u.x) +
                (c - a)* u.y * (1.0 - u.x) +
                (d - b) * u.x * u.y;
    }

    #define OCTAVES 5
    float fbm (in vec2 st) {
        // Initial values
        float value = 0.0;
        float amplitude = .5;
        float frequency = 0.;
        //
        // Loop of octaves
        for (int i = 0; i < OCTAVES; i++) {
            value += amplitude * noise(st);
            st *= 2.;
            amplitude *= .5;
        }
        return value;
    }

    void main( void ) {

      vec2 p = ( gl_FragCoord.xy * 1. - resolution ) / min(resolution.x, resolution.y);
      float c = 0.;
      
      for(float i = 0.; i < 3.; i++) {
        float j = i + 1.;
        p.x += noise(p+j+cos(time)*.1 );
        p.y += noise(p+j+sin(time*.1)*.2 );
        
        //p -= fbm( vec2 ( noise(p) ) );
      }
      p *= fbm( vec2 ( p + time*.1 ) );
      
      
      
      p = vec2(p.x-.2, p.y-.4);
      c = 0.45/length(p-noise(p+time)*.01 );
      

      gl_FragColor = vec4( vec3(c*.95,c*.99,c*.95), 1.0 );

    }
  </script>